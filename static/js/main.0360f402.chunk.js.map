{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","link","placeholder","onClick","toggleMode","role","htmlFor","style","switchStyle","switchText","Textform","useState","text","setText","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","replace","split","length","trim","Alert","prop","alert","class","word","lower","charAt","slice","capitalise","msg","defaultProps","App","setmode","setswitchText","setswitchStyle","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0360f402.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {a} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} border border-danger`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link \" aria-current=\"page\" href=\"/\">HOME</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/About\">{props.link}</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/\">CONTACT</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"/\">MORE</a>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"frm form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"searchBtn btn btn-outline-success text-warning rounded-2\" type=\"submit\">Search</button>\r\n                        </form>\r\n                        <div id=\"switch\" className=\"form-check form-switch mx-2\">\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style={props.switchStyle}>{props.switchText}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    link: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    //  title : 'WEBSITE',\r\n    link: 'ABOUT US'\r\n}\r\n","import React,{ useState } from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick =()=>{\r\n        console.log('Uppercase was clicked')\r\n        setText(text.toUpperCase())\r\n        props.showAlert(\"Converted To Uppercase\",\"success\")\r\n    }\r\n    const handleLowerClick =()=>{\r\n        console.log('lowercase was clicked')\r\n        setText(text.toLowerCase())\r\n        props.showAlert(\"Converted To Lowercase\",\"success\")\r\n    }\r\n    const handleClear =()=>{\r\n        console.log('Clear was clicked')\r\n        setText('')\r\n        props.showAlert(\"Text Cleared\",\"success\")\r\n    }\r\n    const copy= ()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text Copied to Clipboard\",\"success\")\r\n    }\r\n    const handleOnChange =(event)=>{\r\n        console.log('On Change')\r\n        setText(event.target.value)\r\n    }\r\n    function words(){\r\n        let word = text.replace(/^\\s+/g, '')\r\n        // if (text ===''){\r\n        //     return text.trim().split(\" \").length -1;\r\n        // }\r\n        // else {\r\n        //     return text.trim().split(\" \").length;\r\n        // }\r\n        return word.split(\" \").length -1;\r\n\r\n    }\r\n    const [text, setText] = useState('Enter your Text');\r\n    return (\r\n        <>\r\n\r\n            <div className=\"textInput mb-3\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n                <h1 id=\"heading\">{props.heading}</h1>\r\n                <textarea className=\"form\" value={text} style={{backgroundColor :props.mode==='dark'?'grey':'white', color : props.mode==='dark'?'white':'black'}} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                <div className=\"buttons container-fluid\">\r\n                <button type=\"button\" onClick={handleUpClick}  className=\"btn btn1 btn-primary\">Uppercase</button>\r\n                <button type=\"button\" onClick={handleLowerClick}  className=\"btn btn1 btn-secondary\">lowercase</button>\r\n                <button type=\"button\" onClick={handleClear} className=\"btn btn1 btn-success\">Clear</button>\r\n                <button type=\"button\" onClick={copy} className=\"btn btn1 btn-danger\">Copy to CLipboard</button>\r\n                <button type=\"button\" className=\"btn btn1 btn-warning\">Warning</button>\r\n                <button type=\"button\" className=\"btn btn1 btn-info\">Info</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"summary container-fluid mx-5 \"  style={{color : props.mode==='dark'?'white':'black'}} >\r\n                <h1>Text Summary</h1>\r\n                <p>{words()} words and {text.trim().length} characters</p>\r\n                <p>{0.008 * text.split(\" \").length } Minutes read</p>\r\n            </div>\r\n            <div className=\"container-fluid mx-5\"style={{color : props.mode==='dark'?'white':'black'}} >\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter text in text box to preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(prop) {\r\n    function capitalise (word){\r\n        let lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        prop.alert && <div class={`alert alert-${prop.alert.type} alert-dismissible fade show `} role=\"alert\">\r\n            <strong>{capitalise(prop.alert.type)}</strong> : {prop.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n  \n\n  \n// } from \"react-router-dom\"\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const [switchText, setswitchText] = useState('Enable Dark Mode')\n  const [switchStyle, setswitchStyle] = useState({\n    color: 'black'\n  })\n  // const [alertType, setalertType] = useState('')\n  const [alert, setalert] = useState(null)\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark')\n      document.body.style.backgroundColor = '#212529'\n      setswitchText('Enable Light Mode')\n      setswitchStyle({\n        color: 'white'\n      })\n      showAlert(\"Dark Mode Has Been Enabled\", \"success\")\n      document.title = \"Word Manipulator - Dark Mode\"\n    }\n    else {\n      setmode('light')\n      document.body.style.backgroundColor = 'white'\n      setswitchText('Enable Dark Mode')\n      setswitchStyle({\n        color: 'black'\n      })\n      showAlert(\"Light Mode Has Been Enabled\", \"success\")\n      document.title = \"Word Manipulator - Light Mode\"\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"WORD M\" mode={mode} toggleMode={toggleMode} switchText={switchText} switchStyle={switchStyle} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        \n        {/* <Routes>  */}\n              {/* <Route exact path=\"/About\"  element= {<About to=\"/About\"/>} /> */}\n          \n              {/* <Route exact path=\"/\" element= { */}\n              <Textform  showAlert={showAlert} heading=\"Enter your text\" mode={mode} /> \n              {/* } /> */}\n        {/* </Routes> */}\n\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}